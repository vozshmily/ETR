@using ETR.Data.Enum
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@* @model ETR.Models.AddRequestItemViewModel

<h1>Add</h1>

<form method="post">

    <div class="mt-3">
        <label class="form-label">Requestor Name</label>
        <input type="text" class="form-control" asp-for="RequestorName"/>
    </div>

    <div class="mt-3">
        <label class="form-label">Requested Date</label>
        <input type="datetime-local" class="form-control" asp-for="RequestDate" />
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>

</form> *@

@model ETR.Models.AddRequestItemViewModel

<form asp-action="Add">
    <div class="form-group">
        <label asp-for="RequestorName">Requestor Name</label>
        <input asp-for="RequestorName" class="form-control" />
        <span asp-validation-for="RequestorName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="RequestDate">Request Date</label>
        <input asp-for="RequestDate" class="form-control" />
        <span asp-validation-for="RequestDate" class="text-danger"></span>
    </div>

    <!-- Add Line Item button below Request Date -->
    <button type="button" class="btn btn-success mb-3" id="addItemBtn">Add Line Item</button>

    <!-- Table for multiple line items -->
    <div class="form-group">
        <table class="table" id="itemListTable">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Equipment Status</th>
                    <th>Status</th>
                    <th>Remarks</th>
                    <th></th> <!-- Add column for delete button/icon -->
                </tr>
            </thead>
            <tbody></tbody> <!-- Empty tbody initially -->
        </table>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            console.log("Document ready");

            $('#addItemBtn').click(function () {
                console.log("Add Item button clicked");

                var newRow = '<tr>' +
                    '<td><input name="ItemList[' + $('[name="ItemList"]').length + '].Time" class="form-control" /></td>' +
                    '<td>' +
                    '<select name="ItemList[' + $('[name="ItemList"]').length + '].EquipmentStatus" class="form-control" id="equipmentStatus_' + $('[name="ItemList"]').length + '">' +
                    '<option value=""> </option>';

                // Adding options dynamically using Razor syntax
        @{
            foreach (var status in Enum.GetValues(typeof(ETR.Data.Enum.EquipmentStatus)))
            {
                var statusString = status.ToString().Replace("_", " "); // Replace underscores with spaces
                @:newRow += '<option value="@status">@statusString</option>';
            }
        }

                    newRow += '</select>' +
                        '</td>' +
                        '<td>' +
                        '<select name="ItemList[' + $('[name="ItemList"]').length + '].Status" class="form-control status-dropdown">' +
                        '<option value="Option1">Option 1</option>' +
                        '<option value="Option2">Option 2</option>' +
                        '</select>' +
                        '</td>' +
                        '<td><input name="ItemList[' + $('[name="ItemList"]').length + '].Remarks" class="form-control" /></td>' +
                        '<td><button type="button" class="btn btn-danger btn-sm delete-btn">X</button></td>' +
                        '</tr>';
                $('#itemListTable tbody').append(newRow);
            });

            // Delete button click event handler
            $(document).on('click', '.delete-btn', function () {
                $(this).closest('tr').remove(); // Remove the closest row when delete button is clicked
            });

            // Change event handler for EquipmentStatus dropdown
            $(document).on('change', '[id^="equipmentStatus_"]', function () {
                var selectedValue = $(this).val();
                var statusDropdown = $(this).closest('tr').find('.status-dropdown');
                statusDropdown.empty(); // Clear existing options
                if (selectedValue === "Idle") {
                    // Add IDLE status options
                    statusDropdown.append('<option value="IdleOption1">Idle Option 1</option>');
                    statusDropdown.append('<option value="IdleOption2">Idle Option 2</option>');
                } else if (selectedValue === "Breakdown") {
                    // Add BREAKDOWN status options
                    statusDropdown.append('<option value="BreakdownOption1">SUB - STANDARD MATERIAL</option>');
                    statusDropdown.append('<option value="BreakdownOption2">OPERATORS MALPRACTICE</option>');
                    statusDropdown.append('<option value="BreakdownOption3">WORN - OUT PARTS / COMPONENTS</option>');
                    statusDropdown.append('<option value="BreakdownOption4">ON - GOING REHABILITATION</option>');
                } else {
                    // Add default status options
                    statusDropdown.append('<option value="DefaultOption1">NA</option>');
                }
            });
        });
    </script>
}

